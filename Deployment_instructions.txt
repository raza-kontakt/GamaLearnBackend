# GamaLearn Backend Deployment Instructions

## Initial Setup

1. Install Google Cloud SDK
   https://cloud.google.com/sdk/docs/install

2. Login to Google Cloud:
```bash
gcloud auth login
```

3. Set your project:
```bash
gcloud config set project g-learn-assignment
```

4. Enable required services:
```bash
gcloud services enable \
  cloudbuild.googleapis.com \
  run.googleapis.com \
  containerregistry.googleapis.com
```

5. Set default region (optional):
```bash
gcloud config set run/region us-central1
```

## Deployment

1. Initial deployment and updates:
```bash
# Build and deploy using Cloud Build
gcloud builds submit --config cloudbuild.yaml
```

2. Set environment variables:
```bash
gcloud run services update gamalearn-backend \
  --region us-central1 \
  --set-env-vars DATABASE_URL="your_database_url",JWT_SECRET="your_secret",CORS_ORIGIN="your_frontend_url"
```

## Monitoring and Management

1. View service details:
```bash
gcloud run services describe gamalearn-backend --region us-central1
```

2. View logs:
```bash
# View recent logs
gcloud run services logs read gamalearn-backend --region us-central1 --limit 50

# Stream logs in real-time
gcloud run services logs tail gamalearn-backend --region us-central1
```

3. List revisions:
```bash
gcloud run revisions list --service gamalearn-backend --region us-central1
```

4. Rollback to previous revision:
```bash
gcloud run services rollback gamalearn-backend --to-revision=REVISION_NAME --region us-central1
```

## Useful Commands

1. Check service URL:
```bash
gcloud run services describe gamalearn-backend --region us-central1 --format='get(status.url)'
```

2. Update minimum instances (for faster cold starts):
```bash
gcloud run services update gamalearn-backend \
  --region us-central1 \
  --min-instances 1
```

3. Update maximum instances:
```bash
gcloud run services update gamalearn-backend \
  --region us-central1 \
  --max-instances 10
```

4. Update memory and CPU:
```bash
gcloud run services update gamalearn-backend \
  --region us-central1 \
  --memory 512Mi \
  --cpu 1
```

## Environment Variables Required

Make sure to set these environment variables:
- DATABASE_URL: PostgreSQL connection string
- JWT_SECRET: Secret for JWT token generation
- CORS_ORIGIN: Frontend application URL
- NODE_ENV: Set to "production" by default in cloudbuild.yaml

## Important Notes

1. Database Access:
   - Ensure your database is accessible from Cloud Run
   - Use Cloud SQL if possible for better security and performance
   - If using external database, make sure the IP is whitelisted

2. Security:
   - Never commit sensitive environment variables
   - Use Cloud Secret Manager for sensitive data
   - Keep JWT_SECRET secure and unique

3. Monitoring:
   - Set up Cloud Monitoring alerts for errors
   - Monitor CPU and memory usage
   - Set up uptime checks for the service URL

4. Cost Optimization:
   - Use min-instances=0 for development
   - Set appropriate max-instances to control costs
   - Monitor billing and set up alerts

## Troubleshooting

1. If deployment fails:
```bash
# Check build logs
gcloud builds log [BUILD_ID]

# Check service logs
gcloud run services logs read gamalearn-backend --region us-central1
```

2. If service is unreachable:
```bash
# Check service status
gcloud run services describe gamalearn-backend --region us-central1

# Check recent logs
gcloud run services logs read gamalearn-backend --region us-central1 --limit 50
```

3. If environment variables are incorrect:
```bash
# Verify current environment variables
gcloud run services describe gamalearn-backend --region us-central1

# Update environment variables
gcloud run services update gamalearn-backend \
  --region us-central1 \
  --set-env-vars KEY=VALUE
```

## Current Service URL
https://gamalearn-backend-998894343964.us-central1.run.app 







gcloud run services update gamalearn-backend \
  --region us-central1 \
  --set-env-vars DATABASE_URL="postgresql://dbuser:12345qwerty@34.32.98.13:5432/postgres",JWT_SECRET="UUBERMANN",CORS_ORIGIN="https://g-learn-assignment.uw.r.appspot.com"